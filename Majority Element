

class Solution
{
    static int majorityElement(int a[], int size)
    {
        // Step 1: Find the candidate for the majority element
        int candidate = findCandidate(a, size);

        // Step 2: Check if the candidate is the majority element
        if (isMajority(a, size, candidate))
            return candidate;
        else
            return -1;  // If there is no majority element, you can return -1 or handle it accordingly
    }

    // Function to find the candidate for the majority element
    static int findCandidate(int a[], int size)
    {
        int candidate = a[0];
        int count = 1;

        for (int i = 1; i < size; i++) {
            if (a[i] == candidate)
                count++;
            else
                count--;

            if (count == 0) {
                candidate = a[i];
                count = 1;
            }
        }

        return candidate;
    }

    // Function to check if the candidate is the majority element
    static boolean isMajority(int a[], int size, int candidate)
    {
        int count = 0;

        for (int i = 0; i < size; i++) {
            if (a[i] == candidate)
                count++;
        }

        return count > size / 2;
    }
}
