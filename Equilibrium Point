class Solution {

    
    // a: input array
    // n: size of array
    // Function to find equilibrium point in the array.
    public static int equilibriumPoint(long arr[], int n) {

        // Calculate the total sum of the array
        long totalSum = 0;
        for (int i = 0; i < n; i++) {
            totalSum += arr[i];
        }

        // Initialize leftSum to 0
        long leftSum = 0;

        // Iterate through the array to find the equilibrium point
        for (int i = 0; i < n; i++) {
            // Subtract the current element from the total sum to get the right sum
            long rightSum = totalSum - leftSum - arr[i];

            // Check if the left and right sums are equal
            if (leftSum == rightSum) {
                // Return the 1-based index of the equilibrium point
                return i + 1;
            }

            // Update leftSum for the next iteration
            leftSum += arr[i];
        }

        // If no equilibrium point is found, return -1
        return -1;
    }
}
